import telebot
from groq import Groq
import prodiapy
import requests
import io

# Telegram bot token
TELEGRAM_BOT_TOKEN = "7463106457:AAEFGVQIO3GH7RaJGt7yUWBnQF2gK7PQ3mI"

# Groq API key
GROQ_API_KEY = "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"

# Prodia API key
PRODIA_API_KEY = "aae0b28e-7a4a-405e-8c2a-5f0c12ccb964"

# Initialize the Telegram bot
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# Initialize the Groq client
groq_client = Groq(api_key=GROQ_API_KEY)

# Initialize the Prodia client
prodia_client = prodiapy.Prodia(api_key=PRODIA_API_KEY)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "مرحبًا! أنا روبوت مساعد ذكاء اصطناعي. يمكنك التحدث معي أو استخدام 'توليد' لإنشاء الصور.")

@bot.message_handler(func=lambda message: message.text.startswith('توليد'))
def generate_image(message):
    # Extract the prompt from the message
    prompt = message.text.replace('توليد', '', 1).strip()
    
    if not prompt:
        bot.reply_to(message, "يرجى تقديم وصف بعد كلمة 'توليد'.")
        return

    bot.reply_to(message, "جاري توليد الصورة... يرجى الانتظار.")

    try:
        # Generate the image
        job = prodia_client.sd.generate(prompt=prompt)
        result = prodia_client.wait(job)

        # Download the image
        image_response = requests.get(result.image_url)
        image_data = io.BytesIO(image_response.content)

        # Send the image
        bot.send_photo(message.chat.id, image_data, caption=f"الصورة المولدة لـ: {prompt}")
    except Exception as e:
        bot.reply_to(message, f"حدث خطأ أثناء توليد الصورة: {str(e)}")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_message = message.text

    # Generate a response using Groq
    completion = groq_client.chat.completions.create(
        model="llama3-8b-8192",
        messages=[
            {
                "role": "user",
                "content": user_message
            }
        ],
        temperature=1,
        max_tokens=1024,
        top_p=1,
        stream=False,
        stop=None,
    )

    # Extract the generated response
    ai_response = completion.choices[0].message.content

    # Send the response back to the user
    bot.reply_to(message, ai_response)

# Start the bot
bot.polling()
